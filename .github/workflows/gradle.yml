# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "release", "main" ]
  pull_request:
    branches: [ "release" ]

permissions:
  contents: read

jobs:
  build main:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Change wrapper permissions
      run: chmod +x ./main/gradlew
    - name: Build with Gradle
      uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
      with:
        arguments: build
        build-root-directory: ./main/
    - name: check jar
      run: |
        ls ./main/build/libs/

    - name: upload built artifact
      uses: actions/upload-artifact@v3
      with:
        name: main-jar
        path: main/build/libs/main-0.0.1-SNAPSHOT.jar

    - name: Change wrapper permissions
      run: chmod +x ./user-auth/gradlew
    - name: Build with Gradle
      uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
      with:
        arguments: build
        build-root-directory: ./user-auth/
    - name: check jar
      run: |
        ls ./user-auth/build/libs/

    - name: upload built artifact
      uses: actions/upload-artifact@v3
      with:
        name: auth-jar
        path: user-auth/build/libs/user-auth-0.0.1-SNAPSHOT.jar

    - name: Change wrapper permissions
      run: chmod +x ./gateway/gradlew
    - name: Build with Gradle
      uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
      with:
        arguments: build
        build-root-directory: ./gateway/
    - name: check jar
      run: |
        ls ./gateway/build/libs/

    - name: upload built artifact
      uses: actions/upload-artifact@v3
      with:
        name: gateway-jar
        path: gateway/build/libs/gateway-0.0.1-SNAPSHOT.jar

  push_to_registry main:
    needs: [build]
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Download jar from job build
        uses: actions/download-artifact@v3
        with:
          name: main-jar
          path: ./main/
      - name: Download jar from job build
        uses: actions/download-artifact@v3
        with:
          name: auth-jar
          path: ./auth/
      - name: Download jar from job build
        uses: actions/download-artifact@v3
        with:
          name: gateway-jar
          path: ./gateway/
      - name: check jar
        run: ls ./
      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: nthokar/alpha-gramms

      - name: Build and push Docker image
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./main/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta1
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: nthokar/auth

      - name: Build and push Docker image
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./auth/Dockerfile
          push: true
          tags: ${{ steps.meta1.outputs.tags }}
          labels: ${{ steps.meta1.outputs.labels }}
  deploy:
    needs: [ push_to_registry ]
    name: deploy
    runs-on: self-hosted
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: deploy
        run: |
            microk8s kubectl delete pods --all -n chess